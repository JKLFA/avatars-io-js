// Generated by CoffeeScript 1.3.3
var AvatarsIO;

AvatarsIO = (function() {

  function AvatarsIO(token) {
    this.token = token;
  }

  AvatarsIO.prototype.create = function(selector) {
    return new AvatarsIO.Uploader(this.token, selector);
  };

  return AvatarsIO;

})();

AvatarsIO.Uploader = (function() {

  Uploader.prototype.listeners = {};

  function Uploader(token, selector) {
    var _this = this;
    this.token = token;
    this.selector = selector;
    this.socket = new easyXDM.Socket({
      remote: "http://chute.com:3001/v1/upload?authorization=" + this.token,
      onMessage: function(message, origin) {
        return _this.emit('complete', message);
      }
    });
    this.widget = new AjaxUpload($(this.selector)[0], {
      action: "http://chute.com:3001/v1/upload?authorization=" + this.token,
      name: 'avatar',
      allowedExtensions: ['jpg', 'jpeg', 'png', 'gif'],
      onSubmit: function() {
        return _this.emit('new');
      }
    });
    this.emit('init');
  }

  Uploader.prototype.on = function(event, listener) {
    if (!this.listeners[event]) {
      this.listeners[event] = [];
    }
    return this.listeners[event].push(listener);
  };

  Uploader.prototype.emit = function(event, args, context) {
    var listener, _i, _len, _ref;
    if (context == null) {
      context = this;
    }
    if (!this.listeners[event]) {
      return;
    }
    _ref = this.listeners[event];
    for (_i = 0, _len = _ref.length; _i < _len; _i++) {
      listener = _ref[_i];
      listener.apply(context, [args]);
    }
    return void 0;
  };

  return Uploader;

})();
